[s858999@cisone cs2-lab5-Charles-Walker75-1]$ java LinkedQueueTester
expect:abcd
   got:abcd
expect:a
   got:a
expect:empty string
   got:
expect:EmptyCollectionException to be thrown
EmptyCollectionException is caught

[s858999@cisone cs2-lab5-Charles-Walker75-1]$ java TicketCounter
customers:100
Number of cashiers: 1
Average time: 5317

customers:100
Number of cashiers: 2
Average time: 2325

customers:100
Number of cashiers: 3
Average time: 1332

customers:100
Number of cashiers: 4
Average time: 840

customers:100
Number of cashiers: 5
Average time: 547

customers:100
Number of cashiers: 6
Average time: 355

customers:100
Number of cashiers: 7
Average time: 219

customers:100
Number of cashiers: 8
Average time: 120

customers:100
Number of cashiers: 9
Average time: 120

customers:100
Number of cashiers: 10
Average time: 120

    Because each customer must go through same line and arrive roughly every 15 
seconds there is a bottle neck that is formed to how fast as line can develop. That's 
where the cashiers help alleviate that, but with the average request taking 2 minutes 
to be processed there are dimishing returns to how many people can be served. Until, 
there are 8+ cashiers which the average time being 2 minutes becomes the issue with 
getting customers in and out. (I didn't really know what to type in this part.)
